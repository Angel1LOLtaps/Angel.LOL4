--! ANGEL.LOL 3.0 Executor Version (No Prediction)

-- Services
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local Camera = workspace.CurrentCamera

-- Variables
local lock = false
local target = nil

-- HSV rainbow
local function HSV(h, s, v)
    local i = math.floor(h * 6)
    local f = h * 6 - i
    local p = v * (1 - s)
    local q = v * (1 - f * s)
    local t = v * (1 - (1 - f) * s)
    i = i % 6
    if i == 0 then return Color3.new(v, t, p)
    elseif i == 1 then return Color3.new(q, v, p)
    elseif i == 2 then return Color3.new(p, v, t)
    elseif i == 3 then return Color3.new(p, q, v)
    elseif i == 4 then return Color3.new(t, p, v)
    else return Color3.new(v, p, q)
    end
end

-- Intro
local function PlayIntro()
    local IntroGui = Instance.new("ScreenGui")
    IntroGui.Name = "ANGEL_INTRO"
    IntroGui.ResetOnSpawn = false
    IntroGui.Parent = PlayerGui

    local Frame = Instance.new("Frame", IntroGui)
    Frame.Size = UDim2.new(1,0,1,0)
    Frame.BackgroundColor3 = Color3.fromRGB(0,0,0)

    local IntroText = Instance.new("TextLabel", Frame)
    IntroText.AnchorPoint = Vector2.new(0.5,0.5)
    IntroText.Position = UDim2.new(0.5,0,0.5,0)
    IntroText.Size = UDim2.new(0.8,0,0.3,0)
    IntroText.Font = Enum.Font.GothamBlack
    IntroText.TextScaled = true
    IntroText.BackgroundTransparency = 1
    IntroText.Text = ""
    IntroText.TextTransparency = 1

    -- Step 1: Fade in "Introducing"
    IntroText.Text = "Introducing"
    local hue = 0
    local conn
    conn = RunService.RenderStepped:Connect(function(dt)
        hue = (hue + dt*0.5) % 1
        IntroText.TextColor3 = HSV(hue, 1, 1)
        if IntroText.TextTransparency > 0 then
            IntroText.TextTransparency = IntroText.TextTransparency - 0.05
        end
    end)
    task.wait(1.5)
    conn:Disconnect()

    -- Step 2: Fade out
    for i = 0,1,0.05 do
        IntroText.TextTransparency = i
        task.wait(0.05)
    end
    task.wait(0.5)

    -- Step 3: Show "Angel.LOL"
    IntroText.Text = "Angel.LOL"
    IntroText.TextTransparency = 0
    hue = 0
    conn = RunService.RenderStepped:Connect(function(dt)
        hue = (hue + dt*0.5) % 1
        IntroText.TextColor3 = HSV(hue,1,1)
    end)
    task.wait(3)
    conn:Disconnect()

    -- Step 4: Fade out
    for i = 0,1,0.05 do
        IntroText.TextTransparency = i
        task.wait(0.05)
    end

    IntroGui:Destroy()
end

-- Helpers
local function IsAlive(player)
    if not player or not player.Character then return false end
    local hum = player.Character:FindFirstChildOfClass("Humanoid")
    return hum and hum.Health > 0
end

local function GetTargetOnCrosshair()
    local closest, closestDist
    local vp = Camera.ViewportSize
    local screenCenter = Vector2.new(vp.X/2, vp.Y/2)
    for _,plr in pairs(Players:GetPlayers()) do
        if plr ~= LocalPlayer and IsAlive(plr) then
            local root = plr.Character and plr.Character:FindFirstChild("HumanoidRootPart")
            if root then
                local screenPos,onScreen = Camera:WorldToViewportPoint(root.Position)
                if onScreen then
                    local pos2D = Vector2.new(screenPos.X, screenPos.Y)
                    local dist = (pos2D - screenCenter).Magnitude
                    if not closestDist or dist < closestDist then
                        closest = plr
                        closestDist = dist
                    end
                end
            end
        end
    end
    return closest
end

-- Target respawn handler
local function TrackRespawn(plr, NameLabel)
    if not plr then return end
    plr.CharacterAdded:Connect(function(newChar)
        if plr == target and lock then
            NameLabel.Text = "Target: "..plr.Name.." (respawned)"
            repeat task.wait() until newChar:FindFirstChild("HumanoidRootPart") or not lock
        end
    end)
end

-- GUI
local function CreateMainGUI()
    local MainGui = Instance.new("ScreenGui")
    MainGui.Name = "ANGELL_GUI"
    MainGui.ResetOnSpawn = false
    MainGui.Parent = PlayerGui

    local Button = Instance.new("TextButton", MainGui)
    Button.Name = "LockButton"
    Button.Size = UDim2.new(0,180,0,40)
    Button.Position = UDim2.new(0,12,0,12)
    Button.BackgroundColor3 = Color3.fromRGB(20,20,20)
    Button.BorderSizePixel = 3
    Button.BorderColor3 = Color3.fromRGB(0,100,255)
    Button.Font = Enum.Font.GothamBlack
    Button.TextSize = 18
    Button.Text = "Angel.LOL"
    Button.TextColor3 = Color3.fromRGB(255,255,255)

    local NameLabel = Instance.new("TextLabel", Button)
    NameLabel.AnchorPoint = Vector2.new(0,1)
    NameLabel.Size = UDim2.new(1,-10,0,16)
    NameLabel.Position = UDim2.new(0,5,1,-4)
    NameLabel.BackgroundTransparency = 1
    NameLabel.Text = "No target"
    NameLabel.Font = Enum.Font.GothamMedium
    NameLabel.TextSize = 12
    NameLabel.TextColor3 = Color3.fromRGB(200,200,200)

    -- Dragging
    local dragging, dragOffset
    Button.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 
        or input.UserInputType == Enum.UserInputType.Touch then
            dragging = true
            dragOffset = input.Position - Button.AbsolutePosition
        end
    end)
    Button.InputEnded:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 
        or input.UserInputType == Enum.UserInputType.Touch then
            dragging = false
        end
    end)
    UserInputService.InputChanged:Connect(function(input)
        if dragging and (input.UserInputType == Enum.UserInputType.MouseMovement 
        or input.UserInputType == Enum.UserInputType.Touch) then
            local newPos = input.Position - dragOffset
            Button.Position = UDim2.new(0,newPos.X,0,newPos.Y)
        end
    end)

    -- Toggle lock
    Button.MouseButton1Click:Connect(function()
        lock = not lock
        if lock then
            target = GetTargetOnCrosshair()
            if target then
                NameLabel.Text = "Target: "..target.Name
                TrackRespawn(target, NameLabel)
            else
                NameLabel.Text = "No valid target"
            end
        else
            target = nil
            NameLabel.Text = "No target"
        end
    end)

    -- Camera lock
    RunService.RenderStepped:Connect(function()
        local h = (tick()*0.25)%1
        Button.TextColor3 = HSV(h,1,1)
        NameLabel.TextColor3 = HSV((h+0.2)%1,1,1)

        if lock and target then
            local char = target.Character
            if char then
                local aimPart = char:FindFirstChild("HumanoidRootPart") or char:FindFirstChild("Head")
                if aimPart then
                    Camera.CFrame = CFrame.new(Camera.CFrame.Position, aimPart.Position)
                end
            end
        end
    end)
end

-- Execute
PlayIntro()
CreateMainGUI()
